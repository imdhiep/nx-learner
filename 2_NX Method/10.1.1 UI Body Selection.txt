****************** Cấu trúc thường dùng 
using System;
using NXOpen;

public class BodySl
{
    public static void Main(string[] args)
    {
        NXOpen.Session theSession = NXOpen.Session.GetSession();
        NXOpen.UI ui = NXOpen.UI.GetUI();

        NXOpen.NXObject[] objects = SelectBody(ui);

        DisplayResult(theSession, objects);
    }

    // Phương thức để thực hiện thao tác chọn Body
    private static NXOpen.NXObject[] SelectBody(NXOpen.UI ui)
    {
        NXOpen.NXObject[] objects = null; //Đối tượng 

        NXOpen.Selection.MaskTriple[] maskArray = new NXOpen.Selection.MaskTriple[1];
        maskArray[0].Type = NXOpen.UF.UFConstants.UF_solid_type;
        maskArray[0].Subtype = 0;
        maskArray[0].SolidBodySubtype = NXOpen.UF.UFConstants.UF_UI_SEL_FEATURE_SOLID_BODY;

        NXOpen.Selection.Response response = ui.SelectionManager.SelectObjects(
            "Select body", // message
            "Select a Body", // title
            NXOpen.Selection.SelectionScope.AnyInAssembly, // scope
            NXOpen.Selection.SelectionAction.ClearAndEnableSpecific, // action
            true,  // includeFeatures: chọn cả feature và body
            false, // keepHighlighted: không giữ highlighted
            maskArray, // mảng MaskTriple
            out objects // truyền dữ liệu vào objects
        );

        if (response == NXOpen.Selection.Response.Ok)
        {
            return objects; // Trả về mảng các đối tượng được chọn
        }

        return null; // Trả về null nếu không có đối tượng được chọn
    }

    // Phương thức để hiển thị kết quả đã chọn
    private static void DisplayResult(NXOpen.Session theSession, NXOpen.NXObject[] selectedObjects)
    {
        // Mở cửa sổ ListingWindow của NXOpen để hiển thị thông tin
        theSession.ListingWindow.Open();
        
        // Kiểm tra xem có đối tượng nào đã được chọn không
        if (selectedObjects != null && selectedObjects.Length > 0)
        {
            // Duyệt qua từng đối tượng và in thông tin vào cửa sổ ListingWindow
            foreach (NXOpen.NXObject obj in selectedObjects)
            {
                theSession.ListingWindow.WriteLine("Selected object: " + obj.ToString());
            }
        }
        else
        {
            theSession.ListingWindow.WriteLine("No object was selected.");
        }
    }

    public static int GetUnloadOption(string dummy)
    {
        return (int)NXOpen.Session.LibraryUnloadOption.Immediately;
    }

}

*********************** Nhóm Selection thành Class riêng, khởi tạo đối tượng select trong Main
using System;
using System;

public class MainApp
{
    public static void Main(string[] args)
    {
        NXOpen.Session theSession = NXOpen.Session.GetSession();
        NXOpen.UI ui = NXOpen.UI.GetUI();

        WorkObject selector = new WorkObject();
        NXOpen.NXObject[] selectedObjects = selector.BodyArray(ui);

        Result.DisplayResult(theSession, selectedObjects);
    }

    public static int GetUnloadOption(string dummy)
    {
        return (int)NXOpen.Session.LibraryUnloadOption.Immediately;
    }
}

public class WorkObject
{
    public NXOpen.NXObject[] BodyArray(NXOpen.UI ui)
    {
        string message = "Select body";
        string title = "Select a Body";

        NXOpen.Selection.SelectionScope scope = NXOpen.Selection.SelectionScope.AnyInAssembly;
        NXOpen.Selection.SelectionAction action = NXOpen.Selection.SelectionAction.ClearAndEnableSpecific;

        bool includeFeatures = true;
        bool keepHighlighted = false;

        NXOpen.Selection.MaskTriple[] maskArray = new NXOpen.Selection.MaskTriple[1];
        maskArray[0].Type = NXOpen.UF.UFConstants.UF_solid_type;
        maskArray[0].Subtype = 0;
        maskArray[0].SolidBodySubtype = NXOpen.UF.UFConstants.UF_UI_SEL_FEATURE_SOLID_BODY;

        NXOpen.NXObject[] objects = null;

        NXOpen.Selection.Response response = ui.SelectionManager.SelectObjects(
            message,
            title,
            scope,
            action,
		 includeFeatures,
            keepHighlighted,
            maskArray,
            out objects
        );

        if (response == NXOpen.Selection.Response.Ok)
        {
            return objects;
        }

        return null;
    }
}

public class Result
{
    public static void DisplayResult(NXOpen.Session theSession, NXOpen.NXObject[] selectedObjects)
    {
        theSession.ListingWindow.Open();

        if (selectedObjects != null && selectedObjects.Length > 0)
        {
            foreach (NXOpen.NXObject obj in selectedObjects)
            {
                theSession.ListingWindow.WriteLine("Selected object: {obj}");
            }
        }
        else
        {
            theSession.ListingWindow.WriteLine("No object was selected.");
        }
    }
}

*************** Code gọn hơn , không đặt tham số cho Method select, sử dụng var thay cho khai báo mảng

using System;
using NXOpen;

public class App
{
    public static void Main(string[] args)
    {
        NXOpen.Session theSession = NXOpen.Session.GetSession();
        NXOpen.UI ui = NXOpen.UI.GetUI();

        var objects = BodyArray(ui);

        DisplayResult(theSession, objects);
    }

    public static int GetUnloadOption(string dummy)
    {
        return (int)NXOpen.Session.LibraryUnloadOption.Immediately;
    }

private static NXOpen.NXObject[] BodyArray(NXOpen.UI ui)
{
    NXOpen.NXObject[] objects = null;

    var response = ui.SelectionManager.SelectObjects(
        "Select body", // message
        "Select a Body", // title
        NXOpen.Selection.SelectionScope.AnyInAssembly, // scope
        NXOpen.Selection.SelectionAction.ClearAndEnableSpecific, // action
        true,  // includeFeatures: true -> chọn cả feature và body
        false, // keepHighlighted: không giữ highlighted
        new[] // maskArray 
		{  
            new NXOpen.Selection.MaskTriple
            {
                Type = NXOpen.UF.UFConstants.UF_solid_type,
                Subtype = 0,
                SolidBodySubtype = NXOpen.UF.UFConstants.UF_UI_SEL_FEATURE_SOLID_BODY
            } 
	   },
        out objects //
    );

    if (response == NXOpen.Selection.Response.Ok)
    {
        return objects;
    }

    return null;
}

    private static void DisplayResult(NXOpen.Session theSession, NXOpen.NXObject[] selectedObjects)
    {
        theSession.ListingWindow.Open();
        
        if (selectedObjects != null && selectedObjects.Length > 0)
        {
            foreach (var obj in selectedObjects)
            {
                theSession.ListingWindow.WriteLine("Selected object: {obj}");
            }
        }
        else
        {
            theSession.ListingWindow.WriteLine("No object was selected.");
        }
    }
}