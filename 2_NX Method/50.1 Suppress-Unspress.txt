using System;
using NXOpen;

public class NXJournal
{
    public static void Main(string[] args)
    {
        // Lấy đối tượng Session từ NX
        NXOpen.Session theSession = NXOpen.Session.GetSession();
        // Lấy đối tượng Part làm việc (Part đang mở trong NX)
        NXOpen.Part workPart = theSession.Parts.Work;
        // Lấy đối tượng Part hiển thị
        NXOpen.Part displayPart = theSession.Parts.Display;

        // Bắt đầu Undo Mark, giúp có thể hoàn tác lại các thao tác nếu cần
        NXOpen.Session.UndoMarkId markId1 = theSession.SetUndoMark(NXOpen.Session.MarkVisibility.Visible, "Toggle Suppress/Unsuppress Features");

        // Lấy tất cả các feature có trong Part hiện tại
        NXOpen.Features.Feature[] allFeatures = workPart.Features.ToArray();

        // Kiểm tra xem có feature nào bị Suppress (tạm ngừng) không
        bool hasSuppressedFeature = false;
        foreach (NXOpen.Features.Feature feature in allFeatures)
        {
            if (feature.Suppressed) // Nếu feature bị Suppress
            {
                hasSuppressedFeature = true; // Đánh dấu là có feature bị Suppress
                break; // Thoát khỏi vòng lặp ngay khi tìm thấy feature bị Suppress
            }
        }

        // Mở cửa sổ Listing để hiển thị kết quả
        ListingWindow lw = theSession.ListingWindow;
        lw.Open();

        if (hasSuppressedFeature)
        {
            // Nếu có feature bị Suppress, tiến hành Unsuppress tất cả các feature
            NXOpen.Features.Feature[] errorFeatures = workPart.Features.UnsuppressFeatures(allFeatures);

            // Kiểm tra xem có lỗi nào xảy ra khi Unsuppress các feature không
            if (errorFeatures.Length > 0)
            {
                lw.WriteLine("Features gặp lỗi khi Unsuppress:");
                foreach (NXOpen.Features.Feature feature in errorFeatures)
                {
                    lw.WriteLine(feature.Name); // In ra tên các feature bị lỗi
                }
            }
            else
            {
                lw.WriteLine("Tất cả các feature bị Suppress đã được Unsuppress.");
            }
        }
        else
        {
            // Nếu không có feature nào bị Suppress, tiến hành Suppress tất cả các feature
            lw.WriteLine("Suppressing all features:");
            foreach (NXOpen.Features.Feature feature in allFeatures)
            {
                try
                {
                    feature.Suppress(); // Suppress (tạm ngừng) feature
                    lw.WriteLine(string.Format("Feature {0} đã bị Suppress.", feature.Name)); // Ghi lại thông tin feature đã được Suppress
                }
                catch (Exception ex)
                {
                    lw.WriteLine(string.Format("Lỗi khi Suppress feature {0}: {1}", feature.Name, ex.Message)); // In ra lỗi nếu có
                }
            }
        }

        // Đóng cửa sổ Listing sau khi thực hiện các thao tác
        lw.Close();

        // Kết thúc Undo Mark, giúp có thể hoàn tác các thao tác nếu cần
        theSession.DeleteUndoMark(markId1, null);
    }

    // Hàm này trả về lựa chọn tải thư viện khi cần thiết
    public static int GetUnloadOption(string dummy) 
    {
        return (int)NXOpen.Session.LibraryUnloadOption.Immediately; // Thư viện sẽ được tải ngay lập tức sau khi sử dụng
    }
}
