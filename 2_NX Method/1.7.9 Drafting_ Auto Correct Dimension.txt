using System;
using System.Collections.Generic;
using NXOpen;
using NXOpen.Annotations;

public class NXJournal
{
    public static void Main(string[] args)
    {
        Session theSession = Session.GetSession();
        Part workPart = theSession.Parts.Work;

        // Xử lý nhóm Dimension và xóa các Dimension thừa, đồng thời thêm prefix vào Dimension được giữ lại
        RebuildDimension(theSession, workPart);
    }

    private static void RebuildDimension(Session theSession, Part workPart)
    {
        // 1. Nhóm các Dimension theo kích thước đã làm tròn (làm tròn 2 chữ số thập phân)
        Dictionary<double, List<Dimension>> dimensionGroups = new Dictionary<double, List<Dimension>>();

        foreach (Dimension dim in workPart.Dimensions.ToArray()) // chuyển về mảng để duyệt
        {
            double roundedSize = Math.Round(dim.ComputedSize, 2);
            if (!dimensionGroups.ContainsKey(roundedSize))
            {
                dimensionGroups[roundedSize] = new List<Dimension>();
            }
            dimensionGroups[roundedSize].Add(dim);
        }

        // 2. Xác định các Dimension cần xóa (các Dimension trùng kích thước)
        List<NXObject> dimensionsToDelete = new List<NXObject>();

        foreach (var group in dimensionGroups)
        {
            List<Dimension> dimList = group.Value;
            if (dimList.Count > 1)
            {
                // Giữ lại Dimension đầu tiên, xóa phần dư
                Dimension dimensionToKeep = dimList[0];
                dimensionsToDelete.AddRange(dimList.GetRange(1, dimList.Count - 1));

                // Thêm Prefix cho Dimension được giữ lại
                AppendedText appendedText = workPart.Annotations.NewAppendedText();
                appendedText.SetBeforeText(new string[] { dimList.Count + "- " });
                dimensionToKeep.SetAppendedText(appendedText);
                appendedText.Dispose();
            }
        }

        // Thực hiện xóa các Dimension dư thừa nếu có
        if (dimensionsToDelete.Count > 0)
        {
            theSession.SetUndoMarkName(theSession.SetUndoMark(Session.MarkVisibility.Visible, "Delete Dimensions"), "Delete Dimensions");
            theSession.UpdateManager.AddObjectsToDeleteList(dimensionsToDelete.ToArray());
            theSession.UpdateManager.DoUpdate(theSession.SetUndoMark(Session.MarkVisibility.Invisible, "Apply Deletion"));
        }
        
        // 3. Duyệt qua tất cả Dimension trong part để thay đổi hướng văn bản thành Horizontal.
        // Sử dụng builder phù hợp với từng loại Dimension.
        Dimension[] dims = workPart.Dimensions.ToArray();
        foreach (Dimension dim in dims)
        {
            // Nếu Dimension là kiểu DiameterDimension (đối với Radial/DimensionBuilder)
            if (dim is DiameterDimension)
            {
                RadialDimensionBuilder builder = workPart.Dimensions.CreateRadialDimensionBuilder((DiameterDimension)dim);
                builder.Style.DimensionStyle.Orientation = TextOrientation.Horizontal;
                builder.Commit();
                builder.Destroy();
            }
        }
    }

    public static int GetUnloadOption(string dummy)
    {
        return (int)Session.LibraryUnloadOption.AtTermination;
    }
}
